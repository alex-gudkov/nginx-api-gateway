{
    "env": {
        "node": true
    },
    "root": true,
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [
        "import",
        "@typescript-eslint"
    ],
    "ignorePatterns": [],
    "rules": {
        "prettier/prettier": [
            "warn",
            {},
            {
                "usePrettierrc": true
            }
        ],
        "@typescript-eslint/ban-types": "warn",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-empty-interface": "warn",
        "@typescript-eslint/no-empty-function": "warn",
        "@typescript-eslint/explicit-member-accessibility": [
            "warn",
            {
                "overrides": {
                    "constructors": "no-public",
                    "methods": "explicit",
                    "properties": "off",
                    "parameterProperties": "explicit"
                }
            }
        ],
        "arrow-parens": "warn",
        "import/prefer-default-export": "off",
        "import/order": [
            "warn",
            {
                "alphabetize": {
                    "caseInsensitive": true,
                    "order": "asc"
                },
                "groups": [
                    "builtin",
                    "external",
                    "internal",
                    "parent",
                    "sibling",
                    "index",
                    "object",
                    "type"
                ],
                "newlines-between": "always",
                "pathGroups": [
                    {
                        "group": "internal",
                        "pattern": "@/**"
                    }
                ],
                "pathGroupsExcludedImportTypes": []
            }
        ],
        "no-console": "warn",
        "no-duplicate-imports": "warn",
        "no-empty-pattern": "warn",
        "no-return-await": "warn",
        "no-trailing-spaces": "warn",
        "require-await": "warn",
        "object-shorthand": "warn",
        "lines-between-class-members": "off",
        "padding-line-between-statements": [
            "warn",
            {
                "blankLine": "always",
                "next": "class",
                "prev": "*"
            },
            {
                "blankLine": "always",
                "next": "export",
                "prev": "*"
            },
            {
                "blankLine": "any",
                "next": "export",
                "prev": "export"
            },
            {
                "blankLine": "always",
                "next": "for",
                "prev": "*"
            },
            {
                "blankLine": "always",
                "next": "function",
                "prev": "*"
            },
            {
                "blankLine": "any",
                "next": "if",
                "prev": "*"
            },
            {
                "blankLine": "always",
                "next": "*",
                "prev": "if"
            },
            {
                "blankLine": "always",
                "next": "return",
                "prev": "*"
            },
            {
                "blankLine": "always",
                "next": "switch",
                "prev": "*"
            },
            {
                "blankLine": "always",
                "next": "try",
                "prev": "*"
            },
            {
                "blankLine": "always",
                "next": "while",
                "prev": "*"
            },
            {
                "blankLine": "always",
                "next": "*",
                "prev": [
                    "const",
                    "let"
                ]
            },
            {
                "blankLine": "any",
                "next": [
                    "const",
                    "let"
                ],
                "prev": [
                    "const",
                    "let"
                ]
            }
        ]
    }
}
